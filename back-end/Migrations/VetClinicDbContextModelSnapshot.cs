// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using back_end.DB;

#nullable disable

namespace back_end.Migrations
{
    [DbContext(typeof(VetClinicDbContext))]
    partial class VetClinicDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.11")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("back_end.Models.Animal", b =>
                {
                    b.Property<Guid>("VisitId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("AnimalTypeFK")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("DateOfBirth")
                        .HasColumnType("date")
                        .HasColumnName("DateOfBirth");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("Name");

                    b.Property<string>("OwnerName")
                        .IsRequired()
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("Owner");

                    b.HasKey("VisitId");

                    b.HasIndex("AnimalTypeFK");

                    b.HasIndex("Name");

                    b.ToTable("Animals");
                });

            modelBuilder.Entity("back_end.Models.Type", b =>
                {
                    b.Property<Guid>("VisitId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("Name");

                    b.HasKey("VisitId");

                    b.HasIndex("Name")
                        .IsUnique();

                    b.ToTable("AnimalTypes");
                });

            modelBuilder.Entity("back_end.Models.Visit", b =>
                {
                    b.Property<Guid>("VisitId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("AnimalFK")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("DateOfVisit")
                        .HasColumnType("datetime")
                        .HasColumnName("DateOfVisit");

                    b.Property<string>("Diagnosis")
                        .IsRequired()
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("Diagnosis");

                    b.HasKey("VisitId");

                    b.HasIndex("AnimalFK");

                    b.ToTable("Visits");
                });

            modelBuilder.Entity("back_end.Models.Animal", b =>
                {
                    b.HasOne("back_end.Models.Type", "Type")
                        .WithMany()
                        .HasForeignKey("AnimalTypeFK")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Type");
                });

            modelBuilder.Entity("back_end.Models.Visit", b =>
                {
                    b.HasOne("back_end.Models.Animal", "Animal")
                        .WithMany("Visits")
                        .HasForeignKey("AnimalFK")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Animal");
                });

            modelBuilder.Entity("back_end.Models.Animal", b =>
                {
                    b.Navigation("Visits");
                });
#pragma warning restore 612, 618
        }
    }
}
